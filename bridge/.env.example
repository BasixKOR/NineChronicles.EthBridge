# The endpoint of GraphQL API to access Nine Chronicles network.
# Its hostname and port should match with HTTP_ROOT_API_ENDPOINT's hostname and port.
GRAPHQL_API_ENDPOINT="http://localhost:23061/graphql"

# The Sentry DSN url to enable Sentry.
# If you don't want to use Sentry, remove this envirionment variable.
SENTRY_DSN="https://examplePublicKey@o0.ingest.sentry.io/0"

# The address of the contract. 
WNCG_CONTRACT_ADDRESS="0x2395900038eEf1814161A76621912B3599D7d242"

# The path to store intermediate state of monitoring.
MONITOR_STATE_STORE_PATH="/data/bridge.db"

# The url of Libplanet Explorer.
# See also https://github.com/planetarium/libplanet-explorer
# See also https://github.com/planetarium/libplanet-explorer-frontend
# See also https://explorer.libplanet.io/
EXPLORER_ROOT_URL="https://explorer.libplanet.io/9c-internal/"

# The url of Etherscan.
# For instance, https://ropsten.etherscan.io/, https://etherscan.io/
ETHERSCAN_ROOT_URL="https://ropsten.etherscan.io/"

# The provider's url to interact with Ethereum. You can usually use Infura for it.
# This provider will determine the network to use calling 'net_version' in `KmsProvider`.
# If you use https://mainnet.infura.io/v3/..., it will work on mainnet.
# And, if you use https://ropsten.infura.io/v3/..., it will work on ropsten.
# You can see:
# - https://github.com/odanado/aws-kms-provider/blob/89611ba70fed360a01f2ef6b5b3a03d7e97b01f8/src/provider.ts#L175-L188
# - https://github.com/odanado/aws-kms-provider/blob/89611ba70fed360a01f2ef6b5b3a03d7e97b01f8/src/ethereum.ts#L17-L24
# - https://eth.wiki/json-rpc/API#net_version
KMS_PROVIDER_URL=

# TODO: it should be documented.
KMS_PROVIDER_KEY_ID=
KMS_PROVIDER_REGION=
KMS_PROVIDER_AWS_ACCESSKEY=
KMS_PROVIDER_AWS_SECRETKEY=

# A base64 encoded public key provided from KMS used by you.
KMS_PROVIDER_PUBLIC_KEY=

# NCG minter's address. See gold currency state in your network's genesis block.
NCG_MINTER="0x47d082a115c63e7b58b1532d20e631538eafadde"
